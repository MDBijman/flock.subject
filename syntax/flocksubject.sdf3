module flocksubject

imports
  
  Common

context-free start-symbols
  
  Start

context-free sorts

  Expr
  Statement
    
context-free syntax
  
  Expr.Malloc = [malloc()]
  Expr.Int = INT
  Expr.Ref = ID {avoid}
  Expr.Deref = "*" ID
  Expr.True = "true"
  Expr.False = "false"
  Expr.Add = Expr "+" Expr {left}
  Expr.Sub = Expr "-" Expr
  Expr.ArrayIdx = Expr "[" Expr "]" 
  Expr.Gt = Expr ">" Expr
  Expr.Gte = Expr ">=" Expr
  
  Statement.Free = [free([ID]);]
  Statement.IfThenElse = 
    [
      if ([Expr]) {
        [{Statement "\n"}*]
      } else {
        [{Statement "\n"}*]
      }
    ]
  Statement.Assign = [[ID] := [Expr];]
  Statement.DerefAssign = [*[ID] := [Expr];]
  Statement.Skip = ";"
  Statement.Block =
    [
      {
        [{Statement "\n"}*]
      }
    ]
  Statement = Return
  Return.Ret = [return [Expr];]

  Statement.While =
    [
      while ([Expr]) {
        [{Statement "\n"}*]
      }
    ]
  Statement.Print = [print([Expr]);]
  
  Function.Func = 
[fn [ID]() {
  [{Statement "\n"}*]
  [Return]
}]
  
  Start.Root = Function
  Start.Empty = <>

