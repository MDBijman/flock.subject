module examples/LiveVariables
properties
  live: MaySet[name]

property rules
  live(_.end) = {}
  
  live(Ref(n) -> next) = result
  where
    previous = live(next)
    current = {n: Live}
    result = previous \/ current

  live(Deref(n) -> next) = result
  where
    previous = live(next)
    current = {n: Live}
    result = previous \/ current
    
  live(DerefAssign(n, _) -> next) = result
  where
    previous = live(next)
    current = {n: Live}
    result = previous \/ current
    
  live(Assign(n, e) -> next) = { m | m <- live(next), n != m }
  live(_ -> next) = live(next)