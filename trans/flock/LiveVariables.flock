module examples/LiveVariables
properties
  live: MaySet[name]

property rules
  live(_.end) = {} as MaySet[name]
  
  live(t@Ref(n) -> next) = result
  where
    previous: MaySet[name] = live(next)
    current : MaySet[name] = {n: Live{position(t)}} as MaySet[name]
    result  : MaySet[name] = previous \[MaySet[name]]/ current

  live(t@Deref(n) -> next) = result
  where
    previous: MaySet[name] = live(next)
    current : MaySet[name] = {n: Live{position(t)}} as MaySet[name]
    result  : MaySet[name] = previous \[MaySet[name]]/ current
    
  live(t@DerefAssign(n, _) -> next) = result
  where
    previous: MaySet[name] = live(next)
    current : MaySet[name] = {n: Live{position(t)}} as MaySet[name]
    result  : MaySet[name] = previous \[MaySet[name]]/ current
    
  live(Assign(n, e) -> next) = result
  where
    result: MaySet[name] = { m | m <- live(next), n != m }
    
  live(_ -> next) = live(next)